{"ast":null,"code":"var _jsxFileName = \"/Users/katetuohy/Documents/color-palette/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport * as React from 'react';\nimport Palette from './Palette.js';\nimport { Button, TextField } from '@mui/material';\nimport tracery from 'tracery-grammar';\nimport { GetColorName } from 'hex-color-to-color-name';\nimport colorsJson from './tracery/colors.json';\nimport { shades } from './ntc.js'; // import ntc from './ntc.js';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [colors, setColors] = React.useState(['#D57B4F', '#C1D54F', '#4FD554', '#4FD0D5', '#4F65D5']);\n  const [colorsTracery, setColorsTracery] = React.useState(tracery.createGrammar(colorsJson));\n  colorsTracery.addModifiers(tracery.baseEngModifiers);\n  const [num, setNum] = React.useState(5);\n  const [paletteName, setPaletteName] = React.useState(\"Sunny Day on the beach\");\n\n  const ntc = require('./ntc.js');\n\n  const hexToHsl = require('hex-to-hsl');\n\n  const changeColors = () => {\n    let c = [];\n\n    for (let ii = 0; ii < num; ii++) {\n      c.push('#' + (Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0'));\n    }\n\n    setColors(c);\n  };\n\n  const allEqual = arr => arr.every(v => v === arr[0]);\n\n  React.useEffect(() => {\n    var shades = [];\n    var names = [];\n    var numPastels = 0;\n\n    for (var ii = 0; ii < num; ii++) {\n      names.push(ntc.name(colors[ii])[1]);\n      shades.push(ntc.name(colors[ii])[3]);\n\n      if (hexToHsl(colors[ii])[2] > 70) {\n        numPastels++;\n        console.log(colors[ii] + \" is pastel\");\n      }\n    } // Get sub-array of first n elements after shuffled\n\n\n    console.log(\"Shades::\" + shades);\n    console.log(\"Names:: \" + names);\n    var maxEl = \"\";\n    var secondEl = \"\";\n\n    if (allEqual(shades)) {\n      maxEl = shades[0];\n      secondEl = shades[0];\n    } else {\n      let maxElements = [];\n\n      while (shades.length > 0) {\n        var modeMap = {};\n        var maxEl = shades[0],\n            maxCount = 1;\n\n        for (var i = 0; i < shades.length; i++) {\n          var el = shades[i];\n          if (modeMap[el] == null) modeMap[el] = 1;else modeMap[el]++;\n\n          if (modeMap[el] > maxCount) {\n            maxEl = el;\n            maxCount = modeMap[el];\n          }\n        }\n\n        maxElements.push(maxEl);\n        shades = shades.filter(function (value) {\n          return value != maxEl;\n        });\n      }\n\n      if (maxElements.length == num) {\n        console.log(\"shuffle\"); //If all the shades are different, randomize list so selected aren't just the first two in palette\n\n        maxElements = maxElements.sort((a, b) => 0.5 - Math.random());\n      }\n\n      console.log(\"Max Elements::\" + maxElements);\n      maxEl = maxElements[0];\n      secondEl = maxElements[1];\n    }\n\n    var randomName = names[Math.floor(Math.random() * names.length)];\n    let options = []; // options.push('#' + secondEl.toLowerCase() + 'Adj.capitalize# #' + maxEl.toLowerCase() + 'Noun.capitalize.s#');\n    // options.push('#' + maxEl.toLowerCase() + 'Adj.capitalize# #' + secondEl.toLowerCase() + 'Noun.capitalize.s#');\n    // options.push('#' + secondEl.toLowerCase() + 'Adj.capitalize# #' + maxEl.toLowerCase() + 'Noun.capitalize#');\n    // options.push('#' + maxEl.toLowerCase() + 'Adj.capitalize# #' + secondEl.toLowerCase() + 'Noun.capitalize#');\n\n    options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize# and ' + randomName);\n    options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize# and ' + randomName);\n    options.push(randomName + ' and #' + secondEl.toLowerCase() + 'Thing.capitalize#');\n    options.push(randomName + ' and #' + maxEl.toLowerCase() + 'Thing.capitalize#'); // options.push('#' + secondEl.toLowerCase() + 'Adj.capitalize# #' + maxEl.toLowerCase() + 'Noun.capitalize#');\n    // options.push('#' + maxEl.toLowerCase() + 'Adj.capitalize# #' + secondEl.toLowerCase() + 'Noun.capitalize#');\n    // options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize.s# and #' + maxEl.toLowerCase() + 'Thing.capitalize.s#');\n    // options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize.s# and #' + secondEl.toLowerCase() + 'Thing.capitalize.s#');\n    // options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize# and #' + maxEl.toLowerCase() + 'Thing.capitalize#');\n    // options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize# and #' + secondEl.toLowerCase() + 'Thing.capitalize#');\n    // options.push('#' + secondEl.toLowerCase() + 'Noun.capitalize# in #' + maxEl.toLowerCase() + 'Thing.capitalize.s#');\n    // options.push('#' + maxEl.toLowerCase() + 'Noun.capitalize# in #' + secondEl.toLowerCase() + 'Thing.capitalize.s#');\n    // options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize# of #' + maxEl.toLowerCase() + 'Noun.capitalize#');\n    // options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize# of #' + secondEl.toLowerCase() + 'Noun.capitalize#');\n    // options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize# #placeConnectors# #' + maxEl.toLowerCase() + 'Place#');\n    // options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize# #placeConnectors# #' + secondEl.toLowerCase() + 'Place#');\n    // if (onlyTwoShades(shades)) {\n    //   options.push('#' + secondEl.toLowerCase() + maxEl.toLowerCase() + 'Common#');\n    //   options.push('#' + maxEl.toLowerCase() + secondEl.toLowerCase() + 'Common#');\n    // }\n\n    if (numPastels > Math.floor(num / 3)) {\n      var input = '#pastelAdj.capitalize# #' + maxEl.toLowerCase() + 'Noun.capitalize#';\n      console.log(input);\n      setPaletteName(colorsTracery.flatten(input));\n    } else {\n      setPaletteName(colorsTracery.flatten(options[Math.floor(Math.random() * options.length)]));\n    }\n  }, [colors]);\n\n  const changeNumOfColors = event => {\n    setNum(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 30,\n        backgroundColor: '#d6d6d6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: \"Color Palette Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-number\",\n        label: \"Number of Colors\",\n        type: \"number\",\n        InputLabelProps: {\n          shrink: true\n        },\n        InputProps: {\n          inputProps: {\n            min: 2,\n            max: 8\n          }\n        },\n        defaultValue: num,\n        onChange: changeNumOfColors,\n        style: {\n          marginRight: 15,\n          minWidth: 125\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingTop: 30\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"Generate-button\",\n          variant: \"contained\",\n          onClick: changeColors,\n          children: \"Generate New Color Palette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Palette-name\",\n      children: paletteName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Palette, {\n      className: \"Palette\",\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Footer\",\n      children: \"Created by Katherine Tuohy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xjnSJ3e21/HCGysKikaGpbNOmCw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/katetuohy/Documents/color-palette/src/App.js"],"names":["React","Palette","Button","TextField","tracery","GetColorName","colorsJson","shades","App","colors","setColors","useState","colorsTracery","setColorsTracery","createGrammar","addModifiers","baseEngModifiers","num","setNum","paletteName","setPaletteName","ntc","require","hexToHsl","changeColors","c","ii","push","Math","random","toString","padStart","allEqual","arr","every","v","useEffect","names","numPastels","name","console","log","maxEl","secondEl","maxElements","length","modeMap","maxCount","i","el","filter","value","sort","a","b","randomName","floor","options","toLowerCase","input","flatten","changeNumOfColors","event","target","padding","backgroundColor","shrink","inputProps","min","max","marginRight","minWidth","paddingTop"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport * as React from 'react';\nimport Palette from './Palette.js';\nimport { Button, TextField } from '@mui/material';\nimport tracery from 'tracery-grammar';\nimport { GetColorName } from 'hex-color-to-color-name';\nimport colorsJson from './tracery/colors.json';\nimport { shades } from './ntc.js';\n// import ntc from './ntc.js';\n\nfunction App() {\n\n  const [colors, setColors] = React.useState(['#D57B4F','#C1D54F','#4FD554','#4FD0D5','#4F65D5']);\n  const [colorsTracery, setColorsTracery] = React.useState(tracery.createGrammar(colorsJson));\n  colorsTracery.addModifiers(tracery.baseEngModifiers); \n  const [num, setNum] = React.useState(5);\n  const [paletteName, setPaletteName] = React.useState(\"Sunny Day on the beach\");\n  const ntc = require('./ntc.js');\n  const hexToHsl = require('hex-to-hsl');\n\n  const changeColors = () => {\n    let c = [];\n    for (let ii = 0; ii < num; ii++) {\n      c.push('#' + (Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0'));\n    }\n    setColors(c);\n  }\n\n  const allEqual = arr => arr.every( v => v === arr[0] )\n\n  React.useEffect(() => {\n    var shades = []\n    var names = []\n    var numPastels = 0;\n    for (var ii = 0; ii < num; ii++) {\n      names.push(ntc.name(colors[ii])[1])\n      shades.push(ntc.name(colors[ii])[3])\n      if (hexToHsl(colors[ii])[2] > 70) {\n        numPastels++;\n        console.log(colors[ii] + \" is pastel\");\n      }\n    }\n    // Get sub-array of first n elements after shuffled\n    console.log(\"Shades::\" + shades)\n    console.log(\"Names:: \" + names)\n    var maxEl = \"\";\n    var secondEl = \"\";\n    if (allEqual(shades)) {\n      maxEl = shades[0];\n      secondEl = shades[0];\n    } else {\n      let maxElements = []\n      while (shades.length > 0) {\n        var modeMap = {};\n        var maxEl = shades[0], maxCount = 1;\n        for(var i = 0; i < shades.length; i++) {\n            var el = shades[i];\n            if(modeMap[el] == null)\n                modeMap[el] = 1;\n            else\n                modeMap[el]++;  \n            if (modeMap[el] > maxCount) {\n                maxEl = el;\n                maxCount = modeMap[el];\n            }\n        }\n        maxElements.push(maxEl);\n        shades = shades.filter(function(value){ \n          return value != maxEl;\n        });\n      }\n\n      if (maxElements.length == num) {\n        console.log(\"shuffle\");\n        //If all the shades are different, randomize list so selected aren't just the first two in palette\n        maxElements = maxElements.sort((a, b) => 0.5 - Math.random());\n      }\n\n      console.log(\"Max Elements::\" + maxElements)\n\n      maxEl = maxElements[0]\n      secondEl = maxElements[1]\n    }\n\n    var randomName = names[Math.floor(Math.random() * names.length)];\n\n    let options = []\n    \n    // options.push('#' + secondEl.toLowerCase() + 'Adj.capitalize# #' + maxEl.toLowerCase() + 'Noun.capitalize.s#');\n    // options.push('#' + maxEl.toLowerCase() + 'Adj.capitalize# #' + secondEl.toLowerCase() + 'Noun.capitalize.s#');\n    // options.push('#' + secondEl.toLowerCase() + 'Adj.capitalize# #' + maxEl.toLowerCase() + 'Noun.capitalize#');\n    // options.push('#' + maxEl.toLowerCase() + 'Adj.capitalize# #' + secondEl.toLowerCase() + 'Noun.capitalize#');\n\n    options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize# and ' + randomName);\n    options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize# and ' + randomName);\n    options.push(randomName + ' and #' + secondEl.toLowerCase() + 'Thing.capitalize#');\n    options.push(randomName + ' and #' + maxEl.toLowerCase() + 'Thing.capitalize#');\n    // options.push('#' + secondEl.toLowerCase() + 'Adj.capitalize# #' + maxEl.toLowerCase() + 'Noun.capitalize#');\n    // options.push('#' + maxEl.toLowerCase() + 'Adj.capitalize# #' + secondEl.toLowerCase() + 'Noun.capitalize#');\n\n    // options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize.s# and #' + maxEl.toLowerCase() + 'Thing.capitalize.s#');\n    // options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize.s# and #' + secondEl.toLowerCase() + 'Thing.capitalize.s#');\n    // options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize# and #' + maxEl.toLowerCase() + 'Thing.capitalize#');\n    // options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize# and #' + secondEl.toLowerCase() + 'Thing.capitalize#');\n    // options.push('#' + secondEl.toLowerCase() + 'Noun.capitalize# in #' + maxEl.toLowerCase() + 'Thing.capitalize.s#');\n    // options.push('#' + maxEl.toLowerCase() + 'Noun.capitalize# in #' + secondEl.toLowerCase() + 'Thing.capitalize.s#');\n    // options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize# of #' + maxEl.toLowerCase() + 'Noun.capitalize#');\n    // options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize# of #' + secondEl.toLowerCase() + 'Noun.capitalize#');\n\n    // options.push('#' + secondEl.toLowerCase() + 'Thing.capitalize# #placeConnectors# #' + maxEl.toLowerCase() + 'Place#');\n    // options.push('#' + maxEl.toLowerCase() + 'Thing.capitalize# #placeConnectors# #' + secondEl.toLowerCase() + 'Place#');\n\n    // if (onlyTwoShades(shades)) {\n    //   options.push('#' + secondEl.toLowerCase() + maxEl.toLowerCase() + 'Common#');\n    //   options.push('#' + maxEl.toLowerCase() + secondEl.toLowerCase() + 'Common#');\n    // }\n    \n    if (numPastels > Math.floor(num / 3)) {\n      var input = '#pastelAdj.capitalize# #' + maxEl.toLowerCase() + 'Noun.capitalize#';\n      console.log(input)\n      setPaletteName(colorsTracery.flatten(input));\n    }  else {\n      setPaletteName(colorsTracery.flatten(options[Math.floor(Math.random() * options.length)]));\n    }\n  }, [colors]);\n\n  const changeNumOfColors = (event) => {\n    setNum(event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{padding: 30, backgroundColor: '#d6d6d6'}}>\n        <div className=\"App-header\">\n          Color Palette Generator\n        </div>\n        <TextField\n            id=\"outlined-number\"\n            label=\"Number of Colors\"\n            type=\"number\"\n            InputLabelProps={{\n                shrink: true\n            }}\n            InputProps={{\n              inputProps: {\n                min: 2, \n                max: 8\n              }\n            }}\n            defaultValue={num}\n            onChange={changeNumOfColors}\n            style={{marginRight: 15, minWidth: 125}}\n          />\n        <span style={{paddingTop: 30}}>\n          <Button className=\"Generate-button\" variant=\"contained\" onClick={changeColors}>\n            Generate New Color Palette\n          </Button>\n        </span>    \n      </div>\n      <div className=\"Palette-name\">{paletteName}</div>  \n      <Palette className=\"Palette\" colors={colors}/>\n      <div className='Footer'>\n            Created by Katherine Tuohy\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}